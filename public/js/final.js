!function(){"use strict";angular.module("app",["ngRoute","ngSanitize","summernote","angular-loading-bar","ngAnimate","ui.bootstrap","mgo-angular-wizard","textAngular","app.controllers","app.directives","app.localization","app.servicios","app.pagina","app.soporte","app.chat","app.ui.services","app.usuario","ModeloUsuario","app.producto","app.tienda","app.admin"]).config(["$routeProvider",function(e){return e.when("/",{redirectTo:"/dashboard"}).when("/dashboard",{templateUrl:"views/dashboard.html"}).when("/contacto",{templateUrl:"views/soporte/contacto.html"}).when("/usuario/perfil",{templateUrl:"views/usuario/perfil.html",controller:"UsuarioCtrl"}).when("/usuario/password",{templateUrl:"views/usuario/pass.html",controller:"UsuarioCtrl"}).when("/pagos",{templateUrl:"views/pagos/pagos.html"}).when("/upload",{templateUrl:"views/upload/test.html"}).when("/ui/typography",{templateUrl:"views/pages/lock-screen.html"}).when("/pages/profile",{templateUrl:"views/pages/profile.html"}).when("/404",{templateUrl:"views/pages/404.html"}).when("/pages/500",{templateUrl:"views/pages/500.html"}).when("/pages/suspendida",{templateUrl:"views/pages/suspendida.html"}).when("/pages/blank",{templateUrl:"views/pages/blank.html"}).when("/pages/invoice",{templateUrl:"views/pages/invoice.html"}).when("/tienda",{templateUrl:"views/tienda/inicio.html",controller:""}).when("/tienda/item/:producto_id",{templateUrl:"views/tienda/item.html",controller:"TiendaCtrl"}).when("/paginas",{templateUrl:"views/paginas/paginas.html",controller:"PaginasCtrl"}).when("/pagina/add",{templateUrl:"views/paginas/addPagina.html",controller:"PaginaCtrl"}).when("/pagina/:pagina_id/textos",{templateUrl:"views/paginas/textos.html",controller:"PaginaCtrl"}).when("/pagina/:pagina_id",{templateUrl:"views/paginas/dash.html",controller:"PaginaCtrl"}).when("/pagina/:pagina_id/config",{templateUrl:"views/paginas/pagina.html",controller:"PaginaCtrl"}).when("/pagina/:pagina_id/seguidores",{templateUrl:"views/paginas/seguidores.html",controller:"SeguidoresCtrl"}).when("/pagina/:pagina_id/banners",{templateUrl:"scripts/paginas/banners.html",controller:"BannersCtrl"}).when("/pagina/:pagina_id/success",{templateUrl:"views/paginas/success.html",controller:"PaginaCtrl"}).when("/pagina/:pagina_id/estilo",{templateUrl:"views/paginas/estilo.html",controller:"EstiloCtrl"}).when("/pagina/:pagina_id/publicaciones",{templateUrl:"views/paginas/publicaciones.html",controller:"PublicacionesCtrl"}).when("/pagina/:pagina_id/productos",{templateUrl:"views/paginas/productos.html",controller:"ProductoCtrl"}).when("/pagina/:pagina_id/producto/:producto_id",{templateUrl:"views/paginas/producto.html",controller:"ProductoDetalleCtrl"}).when("/pagina/producto/:producto_id",{templateUrl:"views/paginas/producto.html",controller:"ProductoCtrl"}).when("/pagina/:pagina_id/publicacion/:publicacion_id",{templateUrl:"views/paginas/publicacion.html",controller:"PublicacionesCtrl"}).when("/pagina/:pagina_id/cuentas",{templateUrl:"views/paginas/cuentas.html",controller:"PaginaCuentasCtrl"}).when("/pagina/:pagina_id/mensajes",{templateUrl:"views/paginas/mensajes.html",controller:"PaginaMensajesCtrl"}).when("/pagina/:pagina_id/mensaje/:mensaje_id",{templateUrl:"views/paginas/mensajes.html",controller:"PaginaMensajesCtrl"}).when("/pagina/:pagina_id/galerias",{templateUrl:"views/paginas/galerias.html",controller:"GaleriasCtrl"}).when("/pagina/:pagina_id/galeria/:galeria_id",{templateUrl:"views/paginas/galeria.html",controller:"GaleriasCtrl"}).when("/_=_",{templateUrl:"views/dashboard.html"}).when("/servicios",{templateUrl:"views/servicios/servicios.html",controller:"serviciosCtrl"}).when("/servicios/porPagar",{templateUrl:"views/servicios/pendientes.html"}).when("/servicios/facturas",{templateUrl:"views/servicios/facturas.html"}).when("/soporte/faqs",{templateUrl:"views/soporte/faqs.html"}).when("/soporte/chat",{templateUrl:"views/soporte/chat.html",controller:"ChatCtrl"}).when("/soporte/faqs/:faq_id",{templateUrl:"views/soporte/faqs.html"}).when("/test",{templateUrl:"views/pages/test.html",controller:""}).when("/admin",{templateUrl:"views/admin/dash.html",controller:"AdminDashCtrl"}).otherwise({redirectTo:"/404"})}])}(),angular.module("app.chart.ctrls",[]).controller("chartCtrl",["$scope",function(e){return e.easypiechart={percent:65,options:{animate:{duration:1e3,enabled:!0},barColor:"#1C7EBB",lineCap:"round",size:180,lineWidth:5}},e.easypiechart2={percent:35,options:{animate:{duration:1e3,enabled:!0},barColor:"#23AE89",lineCap:"round",size:180,lineWidth:10}},e.easypiechart3={percent:68,options:{animate:{duration:1e3,enabled:!0},barColor:"#2EC1CC",lineCap:"square",size:180,lineWidth:20,scaleLength:0}},e.gaugeChart1={data:{maxValue:3e3,animationSpeed:40,val:1375},options:{lines:12,angle:0,lineWidth:.47,pointer:{length:.6,strokeWidth:.03,color:"#000000"},limitMax:"false",colorStart:"#A3C86D",colorStop:"#A3C86D",strokeColor:"#E0E0E0",generateGradient:!0,percentColors:[[0,"#A3C86D"],[1,"#A3C86D"]]}},e.gaugeChart2={data:{maxValue:3e3,animationSpeed:45,val:1200},options:{lines:12,angle:0,lineWidth:.47,pointer:{length:.6,strokeWidth:.03,color:"#464646"},limitMax:"true",colorStart:"#7ACBEE",colorStop:"#7ACBEE",strokeColor:"#F1F1F1",generateGradient:!0,percentColors:[[0,"#7ACBEE"],[1,"#7ACBEE"]]}},e.gaugeChart3={data:{maxValue:3e3,animationSpeed:50,val:1100},options:{lines:12,angle:0,lineWidth:.47,pointer:{length:.6,strokeWidth:.03,color:"#464646"},limitMax:"true",colorStart:"#FF7857",colorStop:"#FF7857",strokeColor:"#F1F1F1",generateGradient:!0,percentColors:[[0,"#FF7857"],[1,"#FF7857"]]}}}]).controller("morrisChartCtrl",["$scope",function(e){return e.mainData=[{month:"2013-01",xbox:294e3,will:136e3,playstation:244e3},{month:"2013-02",xbox:228e3,will:335e3,playstation:127e3},{month:"2013-03",xbox:199e3,will:159e3,playstation:13e4},{month:"2013-04",xbox:174e3,will:16e4,playstation:82e3},{month:"2013-05",xbox:255e3,will:318e3,playstation:82e3},{month:"2013-06",xbox:298400,will:401800,playstation:98600},{month:"2013-07",xbox:37e4,will:225e3,playstation:159e3},{month:"2013-08",xbox:376700,will:303600,playstation:13e4},{month:"2013-09",xbox:527800,will:301e3,playstation:119400}],e.simpleData=[{year:"2008",value:20},{year:"2009",value:10},{year:"2010",value:5},{year:"2011",value:5},{year:"2012",value:20},{year:"2013",value:19}],e.comboData=[{year:"2008",a:20,b:16,c:12},{year:"2009",a:10,b:22,c:30},{year:"2010",a:5,b:14,c:20},{year:"2011",a:5,b:12,c:19},{year:"2012",a:20,b:19,c:13},{year:"2013",a:28,b:22,c:20}],e.donutData=[{label:"Download Sales",value:12},{label:"In-Store Sales",value:30},{label:"Mail-Order Sales",value:20},{label:"Online Sales",value:19}]}]).controller("flotChartCtrl",["$scope",function(e){var n,a;return n={},n.data1=[[2007,15],[2008,20],[2009,10],[2010,5],[2011,5],[2012,20],[2013,28]],n.data2=[[2007,15],[2008,16],[2009,22],[2010,14],[2011,12],[2012,19],[2013,22]],e.area={},e.area.data=[{data:n.data1,label:"Value A",lines:{fill:!0}},{data:n.data2,label:"Value B",points:{show:!0},yaxis:2}],e.area.options={series:{lines:{show:!0,fill:!1},points:{show:!0,lineWidth:2,fill:!0,fillColor:"#ffffff",symbol:"circle",radius:5},shadowSize:0},grid:{hoverable:!0,clickable:!0,tickColor:"#f9f9f9",borderWidth:1,borderColor:"#eeeeee"},colors:["#23AE89","#6A55C2"],tooltip:!0,tooltipOpts:{defaultTheme:!1},xaxis:{mode:"time"},yaxes:[{},{position:"right"}]},a={},a.data1=[[2008,20],[2009,10],[2010,5],[2011,5],[2012,20],[2013,28]],a.data2=[[2008,16],[2009,22],[2010,14],[2011,12],[2012,19],[2013,22]],a.data3=[[2008,12],[2009,30],[2010,20],[2011,19],[2012,13],[2013,20]],e.barChart={},e.barChart.data=[{label:"Value A",data:a.data1},{label:"Value B",data:a.data2},{label:"Value C",data:a.data3}],e.barChart.options={series:{stack:!0,bars:{show:!0,fill:1,barWidth:.3,align:"center",horizontal:!1,order:1}},grid:{hoverable:!0,borderWidth:1,borderColor:"#eeeeee"},tooltip:!0,tooltipOpts:{defaultTheme:!1},colors:["#23AE89","#2EC1CC","#FFB61C","#E94B3B"]},e.pieChart={},e.pieChart.data=[{label:"Download Sales",data:12},{label:"In-Store Sales",data:30},{label:"Mail-Order Sales",data:20},{label:"Online Sales",data:19}],e.pieChart.options={series:{pie:{show:!0}},legend:{show:!0},grid:{hoverable:!0,clickable:!0},colors:["#23AE89","#2EC1CC","#FFB61C","#E94B3B"],tooltip:!0,tooltipOpts:{content:"%p.0%, %s",defaultTheme:!1}},e.donutChart={},e.donutChart.data=[{label:"Download Sales",data:12},{label:"In-Store Sales",data:30},{label:"Mail-Order Sales",data:20},{label:"Online Sales",data:19}],e.donutChart.options={series:{pie:{show:!0,innerRadius:.5}},legend:{show:!0},grid:{hoverable:!0,clickable:!0},colors:["#23AE89","#2EC1CC","#FFB61C","#E94B3B"],tooltip:!0,tooltipOpts:{content:"%p.0%, %s",defaultTheme:!1}},e.donutChart2={},e.donutChart2.data=[{label:"Download Sales",data:12},{label:"In-Store Sales",data:30},{label:"Mail-Order Sales",data:20},{label:"Online Sales",data:19},{label:"Direct Sales",data:15}],e.donutChart2.options={series:{pie:{show:!0,innerRadius:.45}},legend:{show:!1},grid:{hoverable:!0,clickable:!0},colors:["#176799","#2F87B0","#42A4BB","#5BC0C4","#78D6C7"],tooltip:!0,tooltipOpts:{content:"%p.0%, %s",defaultTheme:!1}}}]).controller("flotChartCtrl.realtime",["$scope",function(e){}]).controller("sparklineCtrl",["$scope",function(e){return e.demoData1={data:[3,1,2,2,4,6,4,5,2,4,5,3,4,6,4,7],options:{type:"line",lineColor:"#fff",highlightLineColor:"#fff",fillColor:"#23AE89",spotColor:!1,minSpotColor:!1,maxSpotColor:!1,width:"100%",height:"150px"}},e.simpleChart1={data:[3,1,2,3,5,3,4,2],options:{type:"line",lineColor:"#1FB5AD",fillColor:"#bce0df",spotColor:!1,minSpotColor:!1,maxSpotColor:!1}},e.simpleChart2={data:[3,1,2,3,5,3,4,2],options:{type:"bar",barColor:"#1FB5AD"}},e.simpleChart3={data:[3,1,2,3,5,3,4,2],options:{type:"pie",sliceColors:["#1fb5ad","#95b75d","#57c8f1","#8175c7","#f3c022","#fa8564"]}},e.tristateChart1={data:[1,2,-3,-5,3,1,-4,2],options:{type:"tristate",posBarColor:"#95b75d",negBarColor:"#fa8564"}},e.largeChart1={data:[3,1,2,3,5,3,4,2],options:{type:"line",lineColor:"#674E9E",highlightLineColor:"#7ACBEE",fillColor:"#927ED1",spotColor:!1,minSpotColor:!1,maxSpotColor:!1,width:"100%",height:"150px"}},e.largeChart2={data:[3,1,2,3,5,3,4,2],options:{type:"bar",barColor:"#A3C86D",barWidth:10,width:"100%",height:"150px"}},e.largeChart3={data:[3,1,2,3,5],options:{type:"pie",sliceColors:["#A3C86D","#7ACBEE","#927ED1","#FDD761","#FF7857","#674E9E"],width:"150px",height:"150px"}}}]),angular.module("app.chart.directives",[]).directive("gaugeChart",[function(){return{restrict:"A",scope:{data:"=",options:"="},link:function(e,n,a){var o,t,i;return o=e.data,i=e.options,t=new Gauge(n[0]).setOptions(i),t.maxValue=o.maxValue,t.animationSpeed=o.animationSpeed,t.set(o.val)}}}]).directive("flotChart",[function(){return{restrict:"A",scope:{data:"=",options:"="},link:function(e,n,a){var o,t,i;return o=e.data,t=e.options,i=$.plot(n[0],o,t)}}}]).directive("flotChartRealtime",[function(){return{restrict:"A",link:function(e,n,a){var o,t,i,r,l,s;return o=[],r=300,t=function(){var e,n,a,t;for(o.length>0&&(o=o.slice(1));o.length<r;)n=o.length>0?o[o.length-1]:50,t=n+10*Math.random()-5,0>t?t=0:t>100&&(t=100),o.push(t);for(a=[],e=0;e<o.length;)a.push([e,o[e]]),++e;return a},l=function(){i.setData([t()]),i.draw(),setTimeout(l,s)},o=[],r=300,s=200,i=$.plot(n[0],[t()],{series:{lines:{show:!0,fill:!0},shadowSize:0},yaxis:{min:0,max:100},xaxis:{show:!1},grid:{hoverable:!0,borderWidth:1,borderColor:"#eeeeee"},colors:["#5BC0C4"]}),l()}}}]).directive("sparkline",[function(){return{restrict:"A",scope:{data:"=",options:"="},link:function(e,n,a){var o,t,i,r;return o=e.data,t=e.options,i=void 0,r=function(){return n.sparkline(o,t)},$(window).resize(function(e){return clearTimeout(i),i=setTimeout(r,200)}),r()}}}]).directive("morrisChart",[function(){return{restrict:"A",scope:{data:"="},link:function(e,n,a){var o,t,i,r;switch(t=e.data,a.type){case"line":return o=void 0===a.lineColors||""===a.lineColors?null:JSON.parse(a.lineColors),r={element:n[0],data:t,xkey:a.xkey,ykeys:JSON.parse(a.ykeys),labels:JSON.parse(a.labels),lineWidth:a.lineWidth||2,lineColors:o||["#0b62a4","#7a92a3","#4da74d","#afd8f8","#edc240","#cb4b4b","#9440ed"],resize:!0},new Morris.Line(r);case"area":return o=void 0===a.lineColors||""===a.lineColors?null:JSON.parse(a.lineColors),r={element:n[0],data:t,xkey:a.xkey,ykeys:JSON.parse(a.ykeys),labels:JSON.parse(a.labels),lineWidth:a.lineWidth||2,lineColors:o||["#0b62a4","#7a92a3","#4da74d","#afd8f8","#edc240","#cb4b4b","#9440ed"],behaveLikeLine:a.behaveLikeLine||!1,fillOpacity:a.fillOpacity||"auto",pointSize:a.pointSize||4,resize:!0},new Morris.Area(r);case"bar":return o=void 0===a.barColors||""===a.barColors?null:JSON.parse(a.barColors),r={element:n[0],data:t,xkey:a.xkey,ykeys:JSON.parse(a.ykeys),labels:JSON.parse(a.labels),barColors:o||["#0b62a4","#7a92a3","#4da74d","#afd8f8","#edc240","#cb4b4b","#9440ed"],stacked:a.stacked||null,resize:!0},new Morris.Bar(r);case"donut":return o=void 0===a.colors||""===a.colors?null:JSON.parse(a.colors),r={element:n[0],data:t,colors:o||["#0B62A4","#3980B5","#679DC6","#95BBD7","#B0CCE1","#095791","#095085","#083E67","#052C48","#042135"],resize:!0},a.formatter&&(i=new Function("y","data",a.formatter),r.formatter=i),new Morris.Donut(r)}}}}]),function(){"use strict";angular.module("app.ui.directives",[]).directive("uiTime",[function(){return{restrict:"A",link:function(e,n){var a,o;return o=function(){var e,t,i,r,l,s;return s=new Date,e=s.getHours(),t=s.getMinutes(),i=s.getSeconds(),t=a(t),i=a(i),l=e+":"+t+":"+i,n.html(l),r=setTimeout(o,500)},a=function(e){return 10>e&&(e="0"+e),e},o()}}}])}(),function(){"use strict";angular.module("app.ui.services",[]).factory("logger",[function(){var e;return toastr.options={closeButton:!0,positionClass:"toast-bottom-right",timeOut:"3000"},e=function(e,n){return toastr[n](e)},{log:function(n){e(n,"info")},logWarning:function(n){e(n,"warning")},logSuccess:function(n){e(n,"success")},logError:function(n){e(n,"error")}}}])}(),function(){"use strict";angular.module("app.admin",["app.admin.service"]).controller("AdminDashCtrl",["$scope","Admin","$routeParams","$route",function(e,n,a,o){function t(){n.websites(function(n,a){n?alert("Hubo un error"):(e.websites=a,e.listo=e.listo+1,e.notify("info","Ya cargaron los websites"))})}function i(){n.apps(function(n,a){n?alert("Hubo un error"):(e.apps=a,e.listo=e.listo+1,e.notify("info","Ya cargaron las apps"))})}e.paginas={},e.listo=0,i(),t(),$("#buscar").focus(),e.borrarApp=function(a){var o=confirm("Seguro que quieres borrar la aplicación: "+a);o&&n.deleteApp(a,function(n,a){n?(alert("ERROR"),console.log(n)):(e.notify("success","Aplicación borrada =S"),i())})},e.borrarWebsite=function(a){var o=confirm("Seguro que quieres borrar la aplicación: "+a);o&&n.deleteWebsite(a,function(n,a){n?(alert("ERROR"),console.log(n)):(e.notify("success","Aplicación borrada =S"),t())})}}])}(),function(){"use strict";angular.module("app.admin.service",["ngRoute"]).factory("Admin",["$http",function(e){return{dominios:function(n){e.get("/api/admin/dominios").success(function(e){n(null,e)}).error(function(){n(error,null)})},websites:function(n){e.get("/api/admin/websites").success(function(e){n(null,e)}).error(function(){n(error,null)})},apps:function(n){e.get("/api/admin/apps").success(function(e){n(null,e)}).error(function(){n(error,null)})},getOne:function(n,a){e.get("/api/paciente/"+n).success(function(e){a(null,e)})},deleteApp:function(n,a){e({method:"DELETE",url:"/api/admin/app/"+n}).success(function(e){a(null,e)}).error(function(e){a(e,null)})},deleteWebsite:function(n,a){e({method:"DELETE",url:"/api/admin/website/"+n}).success(function(e){a(null,e)}).error(function(e){a(e,null)})},deleteDomain:function(n,a){e({method:"DELETE",url:"/api/admin/domain/"+n}).success(function(e){a(null,e)}).error(function(e){a(e,null)})},deleteSeccion:function(n,a,o){e({method:"DELETE",url:"/api/pagina/"+n+"/seccion/"+a}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error",null)})}}}])}(),function(){"use strict";angular.module("app.pagina.banners",[]).controller("BannersCtrl",["$scope","Pagina","$routeParams","$http",function(e,n,a,o){function t(){n.getBanners(i,function(n,a){n?e.notify("error",n):e.banners=a})}var i=a.pagina_id;e.uploadBanner=function(n){var a=new FormData;a.append("file",n[0]),o.post("/api/pagina/banners/pbanner/"+i,a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Se subió correctamente!"),t()}).error(function(){e.notify("warning","Error al subir la imagen")})},e.deleteBanner=function(a){var o=confirm("Realmente deseas eliminar este banner?");o&&n.deleteBanner(a,function(n,a){n?e.notify("warning",n):(e.notify("success",a),t())})},e.updateBanner=function(a){var o=prompt("Ingresa un texto para el banner"),r=prompt("Ingresa una URL para el banner"),l={banner_texto:o,banner_url:r,banner_pagina_id:i};n.updateBanner(l,a,function(n,a){n?e.notify("warning",n):(e.notify("success",a),t())})},t()}])}(),function(){"use strict";angular.module("app.pagina.cuentas",[]).controller("PaginaCuentasCtrl",["$scope","$modal","Pagina","$routeParams","$http",function(e,n,a,o,t){function i(){a.getCuentas(l,function(n,a){n?console.log(n):e.cuentas=a})}function r(){a.getOne(l,function(n,a){n?console.log("Error al cargar la página"):(e.disponibles=a.pagina_cuentas_disponibles,e.usadas=a.pagina_cuentas_usadas)})}var l=o.pagina_id;e.FormAddCuenta={},e.addCuenta=function(){var n=o.pagina_id;a.addCuenta(e.FormAddCuenta,n,function(n,a){n?e.notify("danger","Algo salió mal"):(i(),r(),e.notify("success","Cuenta agregada exitosamente"),e.FormAddCuenta={})})},i(),r()}])}(),function(){"use strict";angular.module("app.pagina.estilo",[]).controller("EstiloCtrl",["$scope","$routeParams","Pagina","$http","$route",function(e,n,a,o,t){function i(){a.getOne(r,function(n,a){n?(console.log(n),e.notify("dange",n)):e.estilo=a})}var r=n.pagina_id;e.estilo={},i(),e.upImg=function(a,t){console.log("Subiendo imagen");var r=new FormData;r.append("file",a[0]),r.append("tipo",t),o.post("/api/pagina/"+n.pagina_id+"/upload/"+t,r,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(n){e.notify("success",n),i()}).error(function(n){e.notify("danger",n)})},e.vistaPrevia=function(e,n){e="http://"+e;var a;a="phone"==n?window.open(e,"MsgWindow","width=480, height=700"):window.open(e,"MsgWindow","width=1200, height=800")}}])}(),function(){"use strict";angular.module("app.pagina.galeria",[]).controller("GaleriasCtrl",["$scope","$window","Pagina","$routeParams","$route","$http",function(e,n,a,o,t,i){function r(){a.getGalerias(c,function(n,a){n?console.log(n):e.galerias=a})}function l(){a.getGaleria(c,u,function(n,a){n?console.log(n):e.FormEditGaleria=a})}function s(){a.getImagenes(c,u,function(n,a){n?console.log(n):e.imagenes=a})}var c=o.pagina_id,u=o.galeria_id;e.pagina_id=c,e.FormAddGaleria={},e.FormEditGaleria={},e.addGaleria=function(){var n=o.pagina_id;a.addGaleria(e.FormAddGaleria,n,function(n,a){n?e.notify("danger","Algo salió mal"):(r(),e.notify("success","Galería agregada exitosamente"),e.FormAddGaleria={})})},e.editGaleria=function(){var n=o.pagina_id;a.updateGaleria(n,u,e.FormEditGaleria,function(n,a){n?e.notify("danger","Algo salió mal"):(r(),e.notify("success","Galería editada exitosamente"),e.FormAddGaleria={})})},e.FormGaleria=function(){$("#vista1").hide("explode"),$("#vista2").show()},e.CancelarAddGaleria=function(){$("#vista1").show("explode"),$("#vista2").hide()},e.redirect=function(){alert("msg"),n.location.href="#/dashboard";$modal.$close()},u?(l(),s()):r(),e.uploadImage=function(n){var a=new FormData;a.append("file",n[0]),i.post("/api/pagina/"+c+"/galeria/"+u+"/upload",a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Se subió correctamente!"),s()}).error(function(){t.reload(),s(),e.notify("warning","Error al subir la imagen")})},e.editarImg=function(n){var o=prompt("Ingresa el título de la imágen"),i=prompt("Ingresa la descripción"),r={imagen_titulo:o,imagen_descripcion:i};a.updateImagen(r,n,function(n,a){n?e.notify("danger","Ocurrió un error"):(e.notify("success","Imágen editada"),t.reload())})},e.deleteImg=function(n){var o=confirm("¿Realmente deseas eliminar la imágen?");o&&a.deleteImg(n,function(n,a){n?e.notify("danger","Ocurrió un error"):(e.notify("success","Imágen eliminada"),t.reload())})}}])}(),function(){"use strict";angular.module("app.pagina.mensajes",[]).controller("PaginaMensajesCtrl",["$scope","Pagina","$routeParams",function(e,n,a){function o(){n.getMensajes(l,function(n,a){n?console.log(n):e.mensajes=a})}function t(){n.getMensajesAll(function(n,a){n?e.notify("danger","No se pudieron cargar tus notificaciones"):(e.notificacionesMensajes=a,e.notificacionesMensajesTotal=e.notificacionesMensajes.length)})}function i(){n.getMensajesStats(l,function(n,a){n?console.log(n):e.stats=a})}function r(){n.getMensaje(a.pagina_id,a.mensaje_id,function(n,a){n?console.log(n):(e.single=1,e.mensaje=a,t())})}var l=a.pagina_id;e.pagina_id=l,a.mensaje_id?r():(o(),i())}])}(),function(){"use strict";angular.module("app.pagina",["app.pagina.service","app.pagina.banners","app.pagina.galeria","app.pagina.estilo","app.pagina.publicacion","app.pagina.mensajes"]).controller("PaginasCtrl",["$scope","Pagina",function(e,n){n.all(function(n,a){n?e.notify("danger","Ocurrió un error al cargar las páginas"):e.paginas=a})}]).controller("PaginaCtrl",["$scope","$window","Pagina","$routeParams","$http",function(e,n,a,o,t){var i=o.pagina_id;e.hoy=Date(),e.pagina={},e.facebook={},e.FormAddPagina={};var r=function(){for(var e="ÃÀÁÄÂÈÉËÊÌÍÏÎÒÓÖÔÙÚÜÛãàáäâèéëêìíïîòóöôùúüûÑñÇç",n="AAAAAEEEEIIIIOOOOUUUUaaaaaeeeeiiiioooouuuunncc",a={},o=0,t=e.length;t>o;o++)a[e.charAt(o)]=n.charAt(o);return function(e){for(var n=[],o=0,t=e.length;t>o;o++){var i=e.charAt(o);a.hasOwnProperty(e.charAt(o))?n.push(a[i]):n.push(i)}return n.join("").replace(/[^-A-Za-z0-9]+/g,"-").toLowerCase()}}();e.subdominio=function(n){e.FormAddPagina.pagina_subdominio=r(n)+"."+e.main.dominio},a.getPaquetes(function(n,a){n?console.log(n):e.tipos=a}),e.buscarFB=function(){var n=$("#facebookID").val(),a=n.split("facebook.com/");a[1]?(a=a[1],a=a.split("?"),a=a[0],a=a.split("/"),a=a[0],t.get("http://graph.facebook.com/"+a).success(function(a){e.facebook=a,e.FormAddPagina.pagina_logo="http://graph.facebook.com/"+n+"/picture",e.FormAddPagina.pagina_portada=a.cover.source,e.FormAddPagina.pagina_nombre=a.name,e.FormAddPagina.pagina_descripcion=a.about,e.FormAddPagina.pagina_telefono=a.phone,e.FormAddPagina.pagina_facebook=$("#facebookID").val(),e.subdominio(a.name)}).error(function(n){console.log(n),e.notify("danger","La URL ingresada no es válida")})):e.notify("danger","La URL ingresada no es válida")},i&&a.getOne(i,function(n,o){n?console.log("Error al cargar la página"):(e.FormEditPagina=o,o.pagina_portada&&o.pagina_portada.length<50&&(e.FormEditPagina.pagina_portada=e.main.base+o.pagina_portada),o.pagina_facebook&&a.getFacebook(o.pagina_facebook,function(n,a){n?console.log(n):e.facebook=a}))}),e.editPagina=function(){var n;n=e.FormEditPagina,a.update(i,n,function(n,a){n?alert(n):($("#result").html('<div class="alert alert-success">Editado correctamente</div>').delay(3e3).hide("explode"),e.notify("success","Editado correctamente"))})},e.crearPagina=function(){var o=e.FormAddPagina;o.pagina_dominio&&o.pagina_nombre?a.create(o).success(function(a){e.notify("success","Página creada correctamente"),console.log(a),n.location.href="#/pagina/"+a}).error(function(n){console.error(n),e.notify("warning",n)}):alert("Información incompleta")},e.uploadFile=function(n){var a=new FormData;a.append("file",n[0]),t.post("/api/upload/"+o.pagina_id,a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Todo salió bien")}).error(function(){e.notify("danger","Todo salió mal")})},e.uploadLogo=function(n){var a=new FormData;a.append("file",n[0]),t.post("/api/upload",a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Todo salió bien")}).error(function(){e.notify("danger","Todo salió mal")})}}]).controller("SeguidoresCtrl",["$scope","Pagina","$routeParams",function(e,n,a){var o=a.pagina_id;n.seguidores(o,function(n,a){n?(console.log(n),e.notify("danger","Error al recuperar los registros")):e.seguidores=a})}])}(),function(){"use strict";angular.module("app.publicacion.service",["ngRoute"]).factory("Publicacion",["$http",function(e){return{getPublicaciones:function(n,a){e.get("/api/pagina/"+n+"/publicaciones").success(function(e){a(null,e)}).error(function(e){console.log(e),a("Error",null)})},getPublicacion:function(n,a,o){e.get("/api/pagina/"+n+"/publicacion/"+a).success(function(e){o(null,e)}).error(function(e){console.log(e)})},addPublicacion:function(n,a,o){e({data:n,method:"POST",url:"/api/pagina/"+a+"/publicaciones"}).success(function(e){o(null,"Ok")}).error(function(e){console.log(e),o("Hubo un error",null)})},"delete":function(n){return e["delete"]("/api/publicaciones/"+n)},update:function(n,a,o){return e({data:a,method:"PUT",url:"/api/publicaciones/"+n})},banner:function(n,a,o){return e({data:a,method:"POST",url:"/api/publicaciones/"+n+"/banner"})},togglePublicacion:function(n,a){e.get("/api/pagina/publicacion/"+n+"/toggle").success(function(e){a(null,e)}).error(function(e){console.log(e),a("Error",null)})}}}])}(),function(){"use strict";angular.module("app.pagina.publicacion",["app.publicacion.service"]).controller("PublicacionesCtrl",["$scope","Publicacion","$routeParams","$http","$route","$window",function(e,n,a,o,t,i){function r(){n.getPublicaciones(c,function(n,a){n?console.log(n):e.publicaciones=a})}function l(){n.getPublicacion(a.pagina_id,a.publicacion_id,function(n,a){n?console.log(n):(e.FormEditPublicacion=a,$("#myCode").html('<iframe width="560" height="315" src="//www.youtube.com/embed/'+e.FormEditPublicacion.publicacion_video+'" frameborder="0" allowfullscreen></iframe>'))})}function s(e){var n=/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/,a=e.match(n);return a&&11==a[2].length?a[2]:"error"}var c=a.pagina_id;e.FormAddPublicacion={},e.FormEditPublicacion={},e.deletePublicacion=function(){var o=confirm("¿Realmente deseas eliminar esta publicación?");o&&n["delete"](a.publicacion_id).success(function(n){i.location="#/pagina/"+FormEditPublicacion.publicacion_pagina_id+"/publicaciones",e.notify("success",n)}).error(function(n){e.notify("danger",n)})},e.addPublicacion=function(){var o=a.pagina_id;n.addPublicacion(e.FormAddPublicacion,o,function(n,a){n?e.notify("danger","Algo salió mal"):(r(),e.notify("success","Publicación agregada exitosamente"),e.FormAddPublicacion={},$("#myCode").html("."))})},e.upImg=function(n){var i=new FormData;i.append("file",n[0]),o.post("/api/publicaciones/"+a.publicacion_id+"/upload",i,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(n){e.notify("success",n),t.reload()}).error(function(e){alert(e)})},e.uploadBanner=function(n){var t=new FormData;t.append("file",n[0]),o.post("/api/publicaciones/"+a.publicacion_id+"/banner",t,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(n){e.notify("success",n)}).error(function(n){e.notify("danger",data)})},e.togglePublicacion=function(a){n.togglePublicacion(a,function(n,a){n?e.notify("danger","Ocurrió un error"):(e.notify("success","¡Listo!"),r())})},e.editPublicacion=function(){a.pagina_id;n.update(a.publicacion_id,e.FormEditPublicacion).success(function(n){e.notify("success",n)}).error(function(n){e.notify("warning",n)})},a.publicacion_id?l():r();var u;e.buscarVideo=function(){var n=$("#myUrl").val();u=s(n),$("#myCode").html('<iframe width="560" height="315" src="//www.youtube.com/embed/'+u+'" frameborder="0" allowfullscreen></iframe>'),e.FormAddPublicacion.publicacion_video=u,e.FormEditPublicacion.publicacion_video=u}}])}(),angular.module("app.pagina.service",["ngRoute"]).factory("Pagina",["$http",function(e){return{all:function(n){e.get("/api/pagina/misPaginas").success(function(e){n(null,e)})},getPaquetes:function(n){e.get("/api/pagina/paquetes/").success(function(e){n(null,e)})},create:function(n,a){return e({data:n,method:"POST",url:"/api/pagina"})},update:function(n,a,o){e({data:a,method:"PUT",url:"/api/pagina/"+n}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error",null)})},getOne:function(n,a){e.get("/api/pagina/"+n).success(function(e){a(null,e)})},getFacebook:function(n,a){e.get("http://graph.facebook.com/"+n).success(function(e){a(null,e)})},expired:function(n){e.get("/api/pagina/vencidas").success(function(e){n(null,e)})},getSecciones:function(n,a){e.get("/api/pagina/"+n+"/secciones").success(function(e){a(null,e)}).error(function(){alert("Algo salió mal, intenta de nuevo más tarde")})},getSeccion:function(n,a){e.get("/api/seccion/"+n).success(function(e){a(null,e)}).error(function(){alert("Algo salió mal, intenta de nuevo más tarde")})},getCuentas:function(n,a){e.get("/api/pagina/"+n+"/cuentas").success(function(e){a(null,e)}).error(function(){alert("Algo salió mal, intenta de nuevo más tarde")})},addCuenta:function(n,a,o){e({data:n,method:"POST",url:"/api/pagina/"+a+"/cuentas"}).success(function(e){o(null,"Ok")}).error(function(e){console.log(e),o("Hubo un error",null)})},getPublicaciones:function(n,a){e.get("/api/pagina/"+n+"/publicaciones").success(function(e){a(null,e)}).error(function(e){console.log(e),a("Error",null)})},getPublicacion:function(n,a,o){e.get("/api/pagina/"+n+"/publicacion/"+a).success(function(e){o(null,e)}).error(function(e){console.log(e)})},addPublicacion:function(n,a,o){e({data:n,method:"POST",url:"/api/pagina/"+a+"/publicaciones"}).success(function(e){o(null,"Ok")}).error(function(e){console.log(e),o("Hubo un error",null)})},deletePublicacion:function(n){return e["delete"]("/api/publicaciones/"+n)},updatePublicacion:function(n,a,o,t){e({data:o,method:"PUT",url:"/api/pagina/"+n+"/publicacion/"+a}).success(function(e){t(null,"Ok")}).error(function(e){t("Hubo un error",null)})},togglePublicacion:function(n,a){e.get("/api/pagina/publicacion/"+n+"/toggle").success(function(e){a(null,e)}).error(function(e){console.log(e),a("Error",null)})},getMensajes:function(n,a){e.get("/api/pagina/"+n+"/mensajes").success(function(e){a(null,e)}).error(function(e){console.log(e)})},getMensajesAll:function(n){e.get("/api/pagina/mensajes/unread").success(function(e){n(null,e)}).error(function(e){n("Error",null)})},getMensajesLatest:function(n){e.get("/api/pagina/mensajes/latest").success(function(e){n(null,e)}).error(function(e){console.log(e)})},getMensaje:function(n,a,o){e.get("/api/pagina/"+n+"/mensaje/"+a).success(function(e){o(null,e)}).error(function(e){console.log(e)})},getMensajesStats:function(n,a){e.get("/api/pagina/"+n+"/mensajes/stats/").success(function(e){a(null,e)}).error(function(e){console.log(e)})},addGaleria:function(n,a,o){e({data:n,method:"POST",url:"/api/pagina/"+a+"/galerias"}).success(function(e){o(null,"Ok")}).error(function(e){console.log(e),o("Hubo un error",null)})},getGaleria:function(n,a,o){e.get("/api/pagina/"+n+"/galeria/"+a).success(function(e){o(null,e)}).error(function(e){console.log(e)})},updateGaleria:function(n,a,o,t){e({data:o,method:"PUT",url:"/api/pagina/"+n+"/galeria/"+a}).success(function(e){t(null,"Ok")}).error(function(e){t("Hubo un error",null)})},getGalerias:function(n,a){e.get("/api/pagina/"+n+"/galerias").success(function(e){a(null,e)}).error(function(e){console.log(e)})},updateImagen:function(n,a,o){e({data:n,method:"PUT",url:"/api/pagina/imagen/"+a}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error: "+e,null)})},deleteImg:function(n,a){e({method:"DELETE",url:"/api/pagina/imagen/"+n}).success(function(e){a(null,"Ok");
}).error(function(e){a(e,null)})},deleteSeccion:function(n,a,o){e({method:"DELETE",url:"/api/pagina/"+n+"/seccion/"+a}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error",null)})},getImagenes:function(n,a,o){e.get("/api/pagina/"+n+"/galeria/"+a+"/imagenes").success(function(e){o(null,e)}).error(function(e){console.log(e)})},seguidores:function(n,a){e.get("/api/pagina/"+n+"/seguidores").success(function(e){a(null,e)}).error(function(e){console.log(e)})},getBanners:function(n,a){e.get("/api/pagina/banners/"+n).success(function(e){a(null,e)}).error(function(e){console.log(e)})},deleteBanner:function(n,a){e["delete"]("/api/pagina/banners/"+n).success(function(e){a(null,e)}).error(function(e){console.log(e)})},updateBanner:function(n,a,o){e({data:n,method:"PUT",url:"/api/pagina/banners/"+a}).success(function(e){o(null,e)}).error(function(e){o(e,null)})}}}]),angular.module("app.pagos",[]).controller("PagoCtrl",["$scope","Pago","$routeParams","$route",function(e,n,a,o){e.pagos={},n.all(function(n,a){n?alert("Hubo un error"):e.pagos=a})}]),angular.module("ModeloPagos",["ngRoute"]).factory("Pago",["$http","$routeParams",function(e,n){return{test:function(e){alert("holaaa")},all:function(n){e.get("/api/pacientes").success(function(e){n(null,e)})},getOne:function(n,a){e.get("/api/paciente/"+n).success(function(e){a(null,e)})},deleteSeccion:function(n,a,o){e({method:"DELETE",url:"/api/pagina/"+n+"/seccion/"+a}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error",null)})}}}]),function(){"use strict";angular.module("app.producto",["app.producto.service"]).controller("ProductoCtrl",["$scope","$modal","Producto","$routeParams",function(e,n,a,o){e.FormAddProducto={},e.misProductos={},a.getCategorias(function(n,a){n?alert("Error al cargar las categorías"):e.categorias=a}),e.addProducto=function(){var n=e.FormAddProducto;a.create(n,o.pagina_id,function(n,a){n?alert(n):(e.notify("success","Producto agregado a tu tienda"),e.FormAddProducto={},t())})};var t=function(){var n=o.pagina_id;a.misProductos(n,function(n,a){n?(console.log(n),e.notify("danger","Algo salió mal")):null!==a?e.misProductos=a:e.notify("danger","Aún no hay productos")})};o.pagina_id&&t()}]).controller("ProductoDetalleCtrl",["$scope","$modal","Producto","$routeParams","$http","$window",function(e,n,a,o,t,i){function r(){a.fotos(o.producto_id,function(n,a){n?console.log(n):e.fotos=a})}e.FormEditarProducto={},a.detail(o.producto_id,function(n,a){n?(alert("Error al carcar el producto"),console.log(n)):e.FormEditarProducto=a}),e.deleteProducto=function(){var n=confirm("¿Realmente quieres eliminar este producto?");n&&a["delete"](o.producto_id).success(function(n){e.notify("success",n),i.location="#/pagina/"+e.FormEditarProducto.producto_pagina_id+"/productos"}).error(function(n){e.notify("danger",n)})},e.deleteImagen=function(n){var o=confirm("¿Estas seguro que deseas eliminar esta imagen?");o&&a.deleteImagen(n,function(n,a){n?alert(n):(e.notify("success","Listo"),r())})},e.uploadImage=function(n){var a=new FormData;a.append("file",n[0]),t.post("/api/producto/"+o.producto_id+"/upload",a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Se subió correctamente!"),r()}).error(function(){$route.reload(),r(),e.notify("danger","Se subió la imágen correctamente")})},e.editarProducto=function(){console.log("Editando producto"),a.update(e.FormEditarProducto,o.producto_id,function(n,a){n?alert("Error al intentar editar el producto"):e.notify("success","Producto editado correctamente")})},r()}])}(),function(){"use strict";angular.module("app.producto.service",["ngRoute"]).factory("Producto",["$http",function(e){return{test:function(e){alert("holaaa")},all:function(n){e.get("/api/pagina/misPaginas").success(function(e){n(null,e)})},"delete":function(n){return e["delete"]("/api/producto/"+n)},getCategorias:function(n){e.get("/api/producto/categorias").success(function(e){n(null,e)}).error(function(e){n("EROR",null)})},getImagenes:function(n,a){e.get("/api/producto/"+n+"/imagenes").success(function(e){a(null,e)}).error(function(e){console.log(e),a("EROR",null)})},fotos:function(n,a){e.get("/api/producto/"+n+"/imagenes").success(function(e){a(null,e)}).error(function(e){a("EROR",null)})},misProductos:function(n,a){e.get("/api/producto/pagina/"+n).success(function(e){a(null,e)}).error(function(e){a(e,null)})},deleteImagen:function(n,a){e["delete"]("/api/producto/imagen/"+n).success(function(e){a(null,e)}).error(function(e){a(e,null)})},detail:function(n,a){e.get("/api/producto/"+n).success(function(e){a(null,e)}).error(function(e){a(e,null)})},create:function(n,a,o){e({data:n,method:"POST",url:"/api/producto/pagina/"+a+"/add"}).success(function(e){o(null,e)}).error(function(e){o("Hubo un error",null)})},update:function(n,a,o){e({data:n,method:"PUT",url:"/api/producto/"+a}).success(function(e){o(null,"Ok")}).error(function(e){o("Hubo un error",null)})}}}])}(),angular.module("app.servicios",[]).controller("serviciosCtrl",["$scope","$filter","$http",function(e,n,a){a.get("/api/pagos").success(function(n,a,o,t){e.servicios=n})}]),angular.module("app.paginas.ctrl",[]).controller("algo",["$scope","$routeParams","$http",function(e,n,a){var o=n.pagina_id;e.gato="hola",e.FormData={},e.FormPagina={},o&&(a.get("/api/pagina/"+o+"/secciones").success(function(n,a,o,t){e.secciones=n}),a.get("/api/pagina/"+o).success(function(n,a,o,t){e.FormPagina=n})),e.processForm=function(){var n=e.FormData;console.log(n),a({method:"POST",url:"/api/pagina",data:n}).success(function(e){}).error(function(e){alert("Algo salió mal"+e)})},e.editPagina=function(){var n;n=e.FormPagina,console.log(n),a({method:"PUT",url:"/api/pagina/"+o,data:n}).success(function(e){console.log(e),$("#result").html('<div class="alert alert-success">Editado correctamente</div>').delay(3e3).hide("explode")}).error(function(e){alert("Algo salió mal"+e)})}}]).controller("menu",["$scope","$routeParams","$http",function(e,n,a){e.prueba="hola",e.pages=""}]).controller("faqs",["$scope","$routeParams","$http",function(e,n,a){a.get("/api/faqs").success(function(n,a,o,t){e.categorias=n}),e.categoria_seleccionada="",e.faq_seleccionada="",e.categoria_titulo="Más leídas",e.getPreguntas=function(n,o){n?a.get("/api/faqs/"+n).success(function(a,t,i,r){e.faqs=a,e.categoria_titulo=o,e.categoria_seleccionada=n}):e.categoria_titulo="Más leídas"},e.getFaq=function(n){a.get("/api/faq/"+n).success(function(a,o,t,i){e.faq_seleccionada=n,e.faq=a}).error(function(){alert("Ocurrió un error al cargar la pregunta")})}}]),angular.module("app.directives",[]).directive("imgHolder",[function(){return{restrict:"A",link:function(e,n,a){return Holder.run({images:n[0]})}}}]).directive("customBackground",function(){return{restrict:"A",controller:["$scope","$element","$location",function(e,n,a){var o,t;return t=function(){return a.path()},o=function(e){switch(n.removeClass("body-home body-special body-tasks body-lock"),e){case"/":return n.addClass("body-home");case"/404":case"/pages/500":case"/pages/signin":case"/pages/signup":return n.addClass("body-special");case"/pages/lock-screen":return n.addClass("body-special body-lock");case"/tasks":return n.addClass("body-tasks")}},o(a.path()),e.$watch(t,function(e,n){return e!==n?o(a.path()):void 0})}]}}).directive("uiColorSwitch",[function(){return{restrict:"A",link:function(e,n,a){return n.find(".color-option").on("click",function(e){var n,a,o;if(n=$(this),a=void 0,o=n.data("style"),"loulou"===o)a="styles/main.css",$('link[href^="styles/main"]').attr("href",a);else{if(!o)return!1;o="-"+o,a="styles/main"+o+".css",$('link[href^="styles/main"]').attr("href",a)}return e.preventDefault()})}}}]).directive("toggleMinNav",["$rootScope",function(e){return{restrict:"A",link:function(n,a,o){var t,i,r,l;return r=$("#app"),t=$(window),a.on("click",function(n){return r.hasClass("nav-min")?r.removeClass("nav-min"):(r.addClass("nav-min"),e.$broadcast("minNav:enabled")),n.preventDefault()}),i=void 0,l=function(){var e;return e=t.width(),768>e?r.removeClass("nav-min"):void 0},t.resize(function(){var e;return clearTimeout(e),e=setTimeout(l,300)})}}}]).directive("collapseNav",[function(){return{restrict:"A",link:function(e,n,a){var o,t,i,r,l;return i=n.find("ul").parent("li"),i.append('<i class="fa fa-caret-right icon-has-ul"></i>'),o=i.children("a"),r=n.children("li").not(i),t=r.children("a"),l=$("#app"),o.on("click",function(e){var n,a;return l.hasClass("nav-min")?!1:(a=$(this),n=a.parent("li"),i.not(n).removeClass("open").find("ul").slideUp(),n.toggleClass("open").find("ul").slideToggle(),e.preventDefault())}),t.on("click",function(e){return i.removeClass("open").find("ul").slideUp()}),e.$on("minNav:enabled",function(e){return i.removeClass("open").find("ul").slideUp()})}}}]).directive("highlightActive",[function(){return{restrict:"A",controller:["$scope","$element","$attrs","$location",function(e,n,a,o){var t,i,r;return i=n.find("a"),r=function(){return o.path()},t=function(e,n){return n="#"+n,angular.forEach(e,function(e){var a,o,t;return o=angular.element(e),a=o.parent("li"),t=o.attr("href"),a.hasClass("active")&&a.removeClass("active"),0===n.indexOf(t)?a.addClass("active"):void 0})},t(i,o.path()),e.$watch(r,function(e,n){return e!==n?t(i,o.path()):void 0})}]}}]).directive("toggleOffCanvas",[function(){return{restrict:"A",link:function(e,n,a){return n.on("click",function(){return $("#app").toggleClass("on-canvas")})}}}]).directive("slimScroll",[function(){return{restrict:"A",link:function(e,n,a){return n.slimScroll({height:"100%"})}}}]).directive("goBack",[function(){return{restrict:"A",controller:["$scope","$element","$window",function(e,n,a){return n.on("click",function(){return a.history.back()})}]}}]),angular.module("app.localization",[]).factory("localize",["$http","$rootScope","$window",function(e,n,a){var o;return o={language:"",url:void 0,resourceFileLoaded:!1,successCallback:function(e){return o.dictionary=e,o.resourceFileLoaded=!0,n.$broadcast("localizeResourcesUpdated")},setLanguage:function(e){return o.language=e.toLowerCase().split("-")[0],o.initLocalizedResources()},setUrl:function(e){return o.url=e,o.initLocalizedResources()},buildUrl:function(){return o.language||(o.language=(a.navigator.userLanguage||a.navigator.language).toLowerCase(),o.language=o.language.split("-")[0]),"i18n/resources-locale_"+o.language+".js"},initLocalizedResources:function(){var a;return a=o.url||o.buildUrl(),e({method:"GET",url:a,cache:!1}).success(o.successCallback).error(function(){return n.$broadcast("localizeResourcesUpdated")})},getLocalizedString:function(e){var n,a;return n=void 0,o.dictionary&&e?(a=e.toLowerCase(),n=""===o.dictionary[a]?e:o.dictionary[a]):n=e,n}}}]).directive("i18n",["localize",function(e){var n;return n={restrict:"EA",updateText:function(n,a,o){var t;return t=void 0,"i18n-placeholder"===a?(t=e.getLocalizedString(o),n.attr("placeholder",t)):a.length>=1?(t=e.getLocalizedString(a),n.text(t)):void 0},link:function(e,a,o){return e.$on("localizeResourcesUpdated",function(){return n.updateText(a,o.i18n,o.placeholder)}),o.$observe("i18n",function(e){return n.updateText(a,e,o.placeholder)})}}}]).controller("LangCtrl",["$scope","localize",function(e,n){return n.setLanguage("ES-ES"),e.lang="Español",e.setLang=function(a){switch(a){case"English":n.setLanguage("EN-US");break;case"Español":n.setLanguage("ES-ES");break;case"日本語":n.setLanguage("JA-JP");break;case"中文":n.setLanguage("ZH-TW");break;case"Deutsch":n.setLanguage("DE-DE");break;case"français":n.setLanguage("FR-FR");break;case"Italiano":n.setLanguage("IT-IT");break;case"Portugal":n.setLanguage("PT-BR");break;case"Русский язык":n.setLanguage("RU-RU");break;case"한국어":n.setLanguage("KO-KR")}return e.lang=a}}]),function(){"use strict";angular.module("app.controllers",[]).controller("AppCtrl",["$scope","$location","$http","logger","$rootScope","$route",function(e,n,a,o,t,i){e.main={},localStorage.removeItem("alerted"),a.get("/config").success(function(n,a,o,t){e.config=n;var i=e.config[1].config_valor;e.main.brand="Nodex",e.main.base=i,e.main.dominio="nodex.mx"}).error(function(){alert("Ops! algo salió mal, lo mejor será intentar en unos minutos")}),e.isSpecificPage=function(){var e;return e=n.path(),_.contains(["/404","/pages/500","/pages/login","/pages/signin","/pages/signin1","/pages/signin2","/pages/signup","/pages/signup1","/pages/signup2","/pages/lock-screen"],e)},e.notify=function(e,n){switch(e){case"info":return o.log(n);case"success":return o.logSuccess(n);case"warning":return o.logWarning(n);case"error":return o.logError(n)}};var r=$("#app");$$(".page").swipeRight(function(){r.removeClass("nav-min"),$("#app").toggleClass("on-canvas")}),$$(".page").swipeLeft(function(){r.addClass("nav-min"),$("#app").toggleClass("on-canvas")}),a.get("/api/usuario/perfil").success(function(n,a,o,i){e.usuario=n,t.usuario=n,n.usuario_facebook?e.main.foto="http://graph.facebook.com/"+n.usuario_facebook+"/picture":e.main.foto="https://answers.atlassian.com/upfiles/user_icons/cached/Timothy_Chin_avatar_icon128.png"})}]).controller("NavCtrl",["$scope","filterFilter","Pagina",function(e,n,a){function o(){a.getMensajesAll(function(n,a){if(n){e.notify("danger","No se pudieron cargar tus notificaciones");var o=localStorage.getItem("alerted")||"";"yes"!=o&&(alert("Ocurrió un error dentro del sistema, lo estamos reparando en este momento. Por favor vuelve a iniciar sesión, lamentamos los inconvenientes"),localStorage.setItem("alerted","yes"))}else e.notificacionesMensajes=a,e.notificacionesMensajesTotal=e.notificacionesMensajes.length})}a.all(function(n,a){n?alert(n):e.misPaginas=a}),a.expired(function(n,a){n?notify("danger","Ocurrió un error"):(e.PaginasVencidas=a,e.TotalPaginasVencidas=a.length)});var t=io();t.on("notificacion",function(e){log(e.username+" left"),addParticipantsMessage(e),removeChatTyping(e)}),setInterval(function(){o()},12e4),o()}]).controller("DashboardCtrl",["$scope","Pagina",function(e,n){n.all(function(n,a){n?alert(n):e.misPaginas=a}),n.getMensajesLatest(function(n,a){n?e.notify("danger","Ocurrió un error al cargar los últimos mensajes, porfavor intenta más tarde"):e.PaginaMensajesLatest=a})}])}(),angular.module("app.chat",[]).controller("ChatCtrl",["$scope","$routeParams","$http","$rootScope","Usuario",function(e,n,a,o,t){function i(e){var n="";n+=1===e.numUsers?"Hay 1 participante":"Hay "+e.numUsers+" participantes"}function r(){var e=document.getElementById("mensajes");e.scrollTop=e.scrollHeight}function l(){b=g(k.val().trim()),v=g(_.val().trim()),b&&(F.fadeOut(),O.show(),F.off("click"),x=A.focus(),D.emit("add user",b,v),D.emit("online users"))}function s(){var n=A.val();n=g(n),n&&U&&(A.val(""),c({username:b,message:n,foto:"https://graph.facebook.com/draweb2.0/picture"}),D.emit("new message",n,e.usuario.usuario_foto))}function c(n,a){var o=m(n);a=a||{},0!==o.length&&(a.fade=!1,o.remove());$('<span class="username"/>').text(n.username).css("color",h(n.username));if(n.username==e.nick)var t=$('<span class="chat-right">').text(n.message);else var t=$('<span class="chat-left">').text(n.message).attr("style","background-image:url(http://graph.facebook.com/"+n.foto+"/picture);background-repeat:no-repeat;");var i=(n.typing?"typing chatlog":"",$('<div class=""/>').append(t));d(i,a),r()}function u(e){e.typing=!0,e.message="is typing"}function p(e){m(e).fadeOut(function(){$(this).remove()})}function d(e,n){var a=$(e);n||(n={}),"undefined"==typeof n.fade&&(n.fade=!0),"undefined"==typeof n.prepend&&(n.prepend=!1),n.fade&&a.hide().fadeIn(w),n.prepend?S.prepend(a):S.append(a),S[0].scrollTop=S[0].scrollHeight}function g(e){return $("<div/>").text(e).text()}function f(){U&&(T||(T=!0,D.emit("typing")),C=(new Date).getTime(),setTimeout(function(){var e=(new Date).getTime(),n=e-C;n>=y&&T&&(D.emit("stop typing"),T=!1)},y))}function m(e){return $(".typing.message").filter(function(n){return $(this).data("username")===e.username})}function h(e){for(var n=7,a=0;a<e.length;a++)n=e.charCodeAt(a)+(n<<5)-n;var o=Math.abs(n%P.length);return P[o]}t.perfil(function(n,a){n?alert(n):(e.nick=a.usuario_nombre,e.facebook=a.usuario_facebook,a.usuario_facebook?e.usuario.usuario_foto="http://graph.facebook.com/"+a.usuario_facebook+"/picture":e.usuario.usuario_foto="https://answers.atlassian.com/upfiles/user_icons/cached/Timothy_Chin_avatar_icon128.png")});var b,v,C,w=150,y=400,P=["#e21400","#91580f","#f8a700","#f78b00","#58dc00","#287b00","#a8f07a","#4ae8c4","#3b88eb","#3824aa","#a700ff","#d300e7"],E=$(window),k=$(".usernameInput"),_=$(".facebookInput"),S=$(".messages"),A=$(".inputMessage"),F=$(".login.page"),O=$(".chat.page"),U=!1,T=!1,x=A.focus(),D=io();l(),E.keydown(function(e){e.ctrlKey||e.metaKey||e.altKey||x.focus(),l(),13===e.which&&(b?(s(),D.emit("stop typing"),T=!1):l())}),A.on("input",function(){f()}),F.click(function(){x.focus()}),A.click(function(){A.focus()}),D.on("login",function(e){U=!0;i(e),D.emit("online users",function(e){console.log(e)})}),D.on("new message",function(e){c(e),D.on("prueba",function(e){console.log(e)})}),D.on("prueba",function(e){console.log(e.numUsers),alert(e)}),D.on("user joined",function(n){console.log(n.username+" se unió a la conversación "),e.con="http://graph.facebook.com/"+n.foto+"/picture",i(n)}),D.on("user left",function(e){console.log(e.username+" se ha desconectado"),i(e),p(e)}),D.on("typing",function(e){u(e)}),D.on("stop typing",function(e){p(e)}),l()}]),angular.module("app.soporte",[]).controller("faqs",["$scope","$routeParams","$http",function(e,n,a){a.get("/api/soporte/faqs").success(function(n,a,o,t){e.categorias=n}),e.categoria_seleccionada="",e.faq_seleccionada="",e.categoria_titulo="Más leídas",e.getPreguntas=function(n,o){n?a.get("/api/soporte/faqs/"+n).success(function(a,t,i,r){e.faqs=a,e.categoria_titulo=o,e.categoria_seleccionada=n}):e.categoria_titulo="Más leídas"},e.getFaq=function(n){a.get("/api/soporte/faq/"+n).success(function(a,o,t,i){e.faq_seleccionada=n,e.faq=a}).error(function(){alert("Ocurrió un error al cargar la pregunta")})}}]),angular.module("app.tienda",[]).controller("TiendaCtrl",function(e,n,a,o,t){e.FormAddProducto={},e.misProductos={},o.getCategorias(function(n,a){n?alert("Error al cargar las categorías"):e.categorias=a}),o.detail(t.producto_id,function(n,a){n?e.notify("danger","Error al cargar el producto"):(e.producto=a,console.log(a))})}),angular.module("ModeloUsuario",["ngRoute"]).factory("Usuario",["$http",function(e){return{create:function(n,a){e({data:n,method:"POST",url:"/api/usuario/add"}).success(function(e){a(null,"Ok")}).error(function(e){a("Error",null)})},perfil:function(n){e.get("/api/usuario/perfil").success(function(e){e?n(null,e):n(null,"")})},update:function(n,a){e({data:n,method:"POST",url:"/api/usuario/edit"}).success(function(e){a(null,"Ok")}).error(function(e){a("Error",null)})},updatePass:function(n,a){e({data:n,method:"POST",url:"/api/usuario/editPass"}).success(function(e){a(null,"Ok")}).error(function(e){a("Error",null)})},nick:function(n,a){e.get("/api/usuario/nick/"+n).success(function(e){""!=e&&a(null,e)})}}}]),angular.module("app.usuario",[]).controller("UsuarioCtrl",function(e,n,a,o,t,i,r){e.FormEditarPerfil={},e.FormChangePassword={};var l=function(){i.perfil(function(n,a){n?e.notify("danger","Ops! Something went wrong, please try again later"):e.FormEditarPerfil=a})};l(),e.editarPerfil=function(){alert("as");var n=e.FormEditarPerfil;i.update(n,function(n,a){n?(e.notify("danger","Ops! Something went wrong, please try again later"),alert("no")):(e.notify("success","Done!"),alert("si"))})},e.checkNick=function(e){i.nick(e,function(e,n){n&&$("#nickMsj").text(n)})},e.coinciden=function(){var e=document.getElementById("pass1").value,n=document.getElementById("pass2").value,a=!0;return e!=n?(document.getElementById("pass1").style.borderColor="#E34234",document.getElementById("pass2").style.borderColor="#E34234",a=!1,$("#passSubmit").attr("disabled",!0)):(document.getElementById("pass1").style.borderColor="#04B404",document.getElementById("pass2").style.borderColor="#04B404",$("#passSubmit").attr("disabled",!1)),a},e.changePass=function(){var n=e.FormChangePassword;i.updatePass(n,function(n,a){n?e.notify("danger","Ops! Something went wrong, please try again later"):e.notify("success","Done!")})},e.uploadFile=function(n){var a=new FormData;a.append("file",n[0]),t.post("/api/upload",a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){r.reload,e.notify("success","Todo salió bien"),l()}).error(function(){e.notify("danger","Todo salió mal")})},e.uploadLogo=function(n){var a=new FormData;a.append("file",n[0]),t.post("/api/upload",a,{withCredentials:!0,headers:{"Content-Type":void 0},transformRequest:angular.identity}).success(function(){e.notify("success","Todo salió bien")}).error(function(){e.notify("danger","Todo salió mal")})}});
//# sourceMappingURL=data:application/json;base64,